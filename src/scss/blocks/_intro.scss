.intro {
  // Default is a single column layout where the header overlaps the media
  display: grid;
  grid-template-rows: get-size('700') auto auto auto get-size('700');
  grid-gap: get-size('500');

  // Force items to span 1 column
  > * {
    grid-column: 1;
  }

  &__header {
    position: relative;
    padding: get-size('300') get-size('500');
    background: rgba(get-color('tertiary-glare'), 0.6);
    z-index: 2;
    grid-row: 2/4;
    margin: 0 get-size('500'); // Adds a horizontal gutter

    // Prevents it from stretching to fill the space
    align-self: end;

    &::before {
      content: '';
      pointer-events: none;
      width: 100%;
      height: 100%;
      position: absolute;
      top: -0.25rem;
      left: -0.25rem;
      background-color: rgba(get-color('light-shade'), 0.8);
      // border: 0.125rem solid get-color('dark');
      z-index: -1;

      @include media-query('md') {
        top: -0.75rem;
        left: -0.75rem;
        // border-width: 0.25rem;
      }
    }
  }

  &__heading {
    z-index: 3;
    em {
      font-style: normal;
      display: block;
      font-weight: 900;

      // The weight change creates a weird indent, so this
      // optical adjustment fixes it
      transform: translateX(-3px);
    }
  }

  &__media {
    grid-row: 1/3;
    position: relative;

    img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
  }

  &__content {
    grid-row: 4;

    p {
      max-width: 30ch;
    }
  }

  // Switch to an inline layout with some vert space
  // above the header and content
  @include media-query('md') {
    grid-template-rows: get-size('500') auto auto auto get-size('500');
    grid-template-columns: minmax(15rem, 1fr) 1fr 1fr;

    &__header {
      padding: get-size('500');
      margin: 0;
      grid-column: 1/3;
      grid-row: 2;
      justify-self: start;
      align-self: end;
    }

    &__media {
      grid-column: 4/2;
      grid-row: 1/5;
    }

    &__content {
      grid-row: 3/4;
      grid-column: 1;
    }
  }

  // Flip the ratio for larger breakpoints
  @include media-query('lg') {
    grid-template-columns: 1fr 1fr minmax(28rem, 1fr);

    // Because it's so large, it make sense to limit the image height too
    &__media {
      height: 35rem;
    }
  }
}
